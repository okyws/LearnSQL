1. Write a query in sql to list all information of the actors who played a role in the movie 'Annie Hall'.
Jawaban:
SELECT actor.act_id, actor.act_fname,  actor.act_lname, actor.act_gender, movie_cast.role, movie.mov_title
FROM actor, movie_cast, movie
WHERE actor.act_id = movie_cast.act_id
AND movie_cast.mov_id = movie.mov_id
AND movie.mov_title = 'Annie Hall';

2. Write a query in sql to find the name of the director (first and last names) who directed a movie that casted a role for 'Eyes Wide Shut'. (using subquery).
Jawaban: 
SELECT (dir_fname||' '||dir_lname) AS director_fullname
FROM director
WHERE dir_id = 
	(SELECT dir_id
	FROM movie_direction
	WHERE mov_id = 
		(SELECT mov_id
		FROM movie
		WHERE mov_title = 'Eyes Wide Shut'));

3. Write a query in sql to list all the movies which released in the country other than UK.
Jawaban: 
SELECT *
FROM movie
WHERE NOT mov_rel_country = 'UK';

4. Write a query in sql to find the movie title, year, date of release, director and actor for those movies which reviewer is unknown.
Jawaban:
SELECT movie.mov_title, movie.mov_year, movie.mov_dt_rel, director.dir_fname, 
	director.dir_lname, (actor.act_fname||' '||actor.act_lname) AS actor_fullname
FROM movie
INNER JOIN movie_direction ON movie.mov_id = movie_direction.mov_id
INNER JOIN movie_cast ON movie_direction.mov_id = movie_cast.mov_id
INNER JOIN rating ON movie_cast.mov_id = rating.mov_id
INNER JOIN reviewer ON rating.rev_id = reviewer.rev_id
INNER JOIN director ON movie_direction.dir_id = director.dir_id
INNER JOIN actor ON movie_cast.act_id = actor.act_id
WHERE reviewer.rev_name IS NULL;

5. Write a query in sql to find the titles of all movies directed by the director whose first and last name are Woody Allen.
Jawaban:
SELECT mov_title
FROM movie
WHERE mov_id = 
	(SELECT mov_id
	FROM movie_direction
	WHERE dir_id = 
		(SELECT dir_id
		FROM director
		WHERE dir_fname = 'Woody' AND dir_lname = 'Allen'));

6. Write a query in sql to find all the years which produced at least one movie and that received a rating of more than 3 stars. Show the result in increasing order.
Jawaban:
SELECT DISTINCT movie.mov_year, rating.rev_stars
FROM movie, rating
WHERE movie.mov_id = rating.mov_id
AND rating.rev_stars > 3
ORDER BY movie.mov_year;

7. Write a query in sql to find the titles of all movies that have no ratings.
Jawaban:
SELECT mov_title
FROM movie
WHERE mov_id IN
	(SELECT mov_id
	FROM rating
	WHERE rev_stars IS NULL);

8. Write a query in sql to find the names of all reviewers who have ratings with null value.
Jawaban:
SELECT rev_name
FROM reviewer
WHERE rev_id IN
	(SELECT rev_id
	FROM rating
	WHERE rev_stars IS NULL);

9. Write a query in sql to return the reviewer name, movie title, and stars for those movies which reviewed by a reviewer and must be rated. sort the result by reviewer name, movie title, and number of stars.
Jawaban: 
SELECT reviewer.rev_name, movie.mov_title, rating.rev_stars
FROM reviewer
INNER JOIN rating ON reviewer.rev_id = rating.rev_id
INNER JOIN movie ON rating.mov_id = movie.mov_id
WHERE rating.rev_stars IS NOT NULL
AND reviewer.rev_name IS NOT NULL
ORDER BY reviewer.rev_name, movie.mov_title, rating.rev_stars;

10. Write a query in sql to find the reviewer's name and the title of the movie for those reviewers who rated more than one movies.
Jawaban:
SELECT reviewer.rev_name, movie.mov_title
FROM reviewer
INNER JOIN rating ON reviewer.rev_id = rating.rev_id
INNER JOIN movie ON rating.mov_id = movie.mov_id
WHERE rating.rev_id = 
	(SELECT rev_id
	FROM rating
	GROUP BY rev_id
	HAVING COUNT(*) > 1);

11. Write a query in sql to find the movie title, and the highest number of stars that movie received and arranged the result according to the group of a movie and the movie title appear alphabethically in ascending order.
Jawaban:
SELECT movie.mov_title, rating.rev_stars
FROM movie
INNER JOIN rating ON movie.mov_id = rating.mov_id
WHERE rating.rev_stars = 
	(SELECT MAX(rev_stars)
	FROM rating)
ORDER BY movie.mov_title;

12. Write a query in sql to find the names of all reviewers who rated the movie American Beauty.
Jawaban:
SELECT rev_name
FROM reviewer
WHERE rev_id = 
	(SELECT rev_id
	FROM rating
	WHERE mov_id = 
		(SELECT mov_id
		FROM movie 
		WHERE mov_title = 'American Beauty'));

13. Write a query in sql to find the title of all movies which have been reviewed by anybody except by Paul Monks.
Jawaban:
SELECT mov_title
FROM movie
WHERE mov_id IN  
	(SELECT mov_id
	FROM rating
	WHERE rev_id IN 
		(SELECT rev_id
		FROM reviewer 
		WHERE NOT rev_name = 'Paul Monks'))
ORDER BY mov_title;

14. Write a query in sql to return the reviewer name, movie title, and number of stars for those movies which rating is the lowest one.
Jawaban:
SELECT reviewer.rev_name, movie.mov_title, rating.rev_stars
FROM reviewer
INNER JOIN rating ON reviewer.rev_id = rating.rev_id
INNER JOIN movie ON rating.mov_id = movie.mov_id
WHERE rating.rev_stars = 
	(SELECT MIN(rev_stars)
	FROM rating);

15. Write a query in sql to find the titles of all movies directed by James Cameron.
Jawaban:
SELECT mov_title
FROM movie
WHERE mov_id IN 
	(SELECT mov_id
	FROM movie_direction
	WHERE dir_id = 
		(SELECT dir_id
		FROM director
		WHERE (dir_fname||' '||dir_lname) = 'James Cameron'));

16. Write a query in sql to find the name of those movies where one or more actors acted in two or more movies.
Jawaban:
SELECT mov_title
FROM movie
INNER JOIN movie_cast ON movie.mov_id = movie_cast.mov_id
WHERE movie_cast.act_id = 
	(SELECT act_id
	FROM movie_cast
	GROUP BY act_id
	HAVING COUNT(*) > 1);
